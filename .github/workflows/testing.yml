name: Build ungoogled-chromium-archlinux for testing
on:
    push:
        branches:
            - "**"
    pull_request:

jobs:
    build-container:
        runs-on: ubuntu-latest
        container: archlinux
        steps:
            - name: Checkout latest commit
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
            - name: Install dependencies
              run: pacman -Syu --needed --noconfirm docker base-devel
            - name: Log into registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            - name: Build container
              id: build
              run: |
                  # Add non root user to run makepkg with
                  useradd makepkg --no-create-home
                  chown -R makepkg .

                  echo "::group::Generating source archive..."

                  # Generate archive with all required sources for the build
                  # This either includes local or downloads files using an url
                  su -c "makepkg --allsource" makepkg

                  echo "::endgroup::"

                  CHROMIUM_VERSION="$(compgen -G "*.src.tar.gz" | grep -Po '([\d\.]+-\d*)')"

                  REGISTRY="ghcr.io/${{ github.repository_owner }}"
                  NAME="ungoogled-chromium-archlinux-testing"

                  ID="$(echo $REGISTRY/$NAME | tr '[A-Z]' '[a-z]')"
                  REF="$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')"

                  [[ "${{ github.ref }}" == "refs/tags/"* ]] && REF=$(echo $REF | sed -e 's/^v//')

                  [ "$REF" == "master" ] && REF=latest

                  REF_TAG="$ID:$REF"
                  SHA_TAG="$ID:${{ github.sha }}"

                  echo "CHROMIUM_VERSION=$CHROMIUM_VERSION"
                  echo "REGISTRY=$REGISTRY"
                  echo "NAME=$NAME"
                  echo "ID=$ID"
                  echo "REF=$REF"
                  echo "REF_TAG=$REF_TAG"
                  echo "SHA_TAG=$SHA_TAG"

                  echo "::group::Building container image..."

                  # Build container from source files
                  docker build . \
                      --file .github/workflows/container/Dockerfile \
                      --tag "$REF_TAG" \
                      --tag "$SHA_TAG"

                  # Reduce worker space used
                  rm -rf *

                  echo "::endgroup::"

                  echo "::set-output name=chromium-version::$CHROMIUM_VERSION"

                  echo "::set-output name=ref-tag::$REF_TAG"
                  echo "::set-output name=sha-tag::$SHA_TAG"

                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                      echo "::set-output name=use-registry::false"
                  else
                      echo "::set-output name=use-registry::true"
                  fi
            - name: Push image
              if: ${{ steps.build.outputs.use-registry == 'true' }}
              run: |
                  docker push "${{ steps.build.outputs.sha-tag }}"
                  docker push "${{ steps.build.outputs.ref-tag }}"
            - name: Save image
              if: ${{ steps.build.outputs.use-registry == 'false' }}
              run: docker save "${{ steps.build.outputs.sha-tag }}" > image
            - name: Upload image
              if: ${{ steps.build.outputs.use-registry == 'false' }}
              uses: actions/upload-artifact@v2
              with:
                  name: image
                  path: image
                  if-no-files-found: error
        outputs:
            chromium-version: "${{ steps.build.outputs.chromium-version }}"
            use-registry: "${{ steps.build.outputs.use-registry }}"
            image-tag: "${{ steps.build.outputs.sha-tag }}"

    build-1:
        runs-on: ubuntu-latest
        needs: build-container
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    build-2:
        runs-on: ubuntu-latest
        needs: build-1
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  finished: "${{ join(needs.*.outputs.finished) }}"
                  progress-name: build-1
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    build-3:
        runs-on: ubuntu-latest
        needs: build-2
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  finished: "${{ join(needs.*.outputs.finished) }}"
                  progress-name: build-2
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    build-4:
        runs-on: ubuntu-latest
        needs: build-3
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  finished: "${{ join(needs.*.outputs.finished) }}"
                  progress-name: build-3
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    build-5:
        runs-on: ubuntu-latest
        needs: build-4
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  finished: "${{ join(needs.*.outputs.finished) }}"
                  progress-name: build-4
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    build-6:
        runs-on: ubuntu-latest
        needs: build-5
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Stage
              run: npm run setup --prefix ./.github/actions/stage
            - name: Run Stage
              id: stage
              uses: ./.github/actions/stage
              with:
                  finished: "${{ join(needs.*.outputs.finished) }}"
                  progress-name: build-5
                  chromium-version: "${{ join(needs.*.outputs.chromium-version) }}"
                  use-registry: "${{ join(needs.*.outputs.use-registry) }}"
                  registry-token: "${{ secrets.GITHUB_TOKEN }}"
                  image-tag: "${{ join(needs.*.outputs.image-tag) }}"
        outputs:
            finished: "${{ steps.stage.outputs.finished }}"
            chromium-version: "${{ steps.stage.outputs.chromium-version }}"
            use-registry: "${{ steps.stage.outputs.use-registry }}"
            image-tag: "${{ steps.stage.outputs.image-tag }}"

    test-package:
        runs-on: ubuntu-latest
        needs: build-6
        steps:
            - name: Log into registry
              if: ${{ join(needs.*.outputs.use-registry) == 'true' }}
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            - name: Pull image
              if: ${{ join(needs.*.outputs.use-registry) == 'true' }}
              run: docker pull "${{ join(needs.*.outputs.image-tag) }}"
            - name: Download image
              if: ${{ join(needs.*.outputs.use-registry) == 'false' }}
              uses: actions/download-artifact@v2
              with:
                  name: image
            - name: Load image
              if: ${{ join(needs.*.outputs.use-registry) == 'false' }}
              run: docker load < image
            - name: Remove image
              if: ${{ join(needs.*.outputs.use-registry) == 'false' }}
              run: rm image
            - name: Download package
              uses: actions/download-artifact@v2
              with:
                  name: ${{ join(needs.*.outputs.chromium-version) }}
            - name: Prepare package
              run: mv *.pkg.* package
            - name: Run container
              run: docker run
                  --entrypoint /bin/bash
                  --mount type=bind,source="$(pwd)/package",target=/home/build/package
                  "${{ join(needs.*.outputs.image-tag) }}"
                  -c '
                  sudo pacman -U /home/build/package --noconfirm
                  chromium --version
                  git clone https://github.com/web-platform-tests/wpt
                  cd wpt
                  sudo pacman -Syu --needed --noconfirm python python-pip python-virtualenv
                  ./wpt make-hosts-file | sudo tee -a /etc/hosts
                  ./wpt run --binary /usr/bin/chromium chrome'
